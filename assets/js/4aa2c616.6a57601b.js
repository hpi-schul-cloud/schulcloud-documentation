"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[3897],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},9023:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"frontend/GitConventions","title":"Git Conventions","description":"Each change should be done in a Ticket (no matter how small).","source":"@site/docs/frontend/3_GitConventions.md","sourceDirName":"frontend","slug":"/frontend/GitConventions","permalink":"/docs/frontend/GitConventions","draft":false,"unlisted":false,"editUrl":"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/frontend/3_GitConventions.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Code Conventions","permalink":"/docs/frontend/CodeConventions"},"next":{"title":"How To","permalink":"/docs/frontend/HowTo"}}');var s=t(4848),i=t(8453);const r={sidebar_position:4},a="Git Conventions",c={},l=[{value:"Pull Requests",id:"pull-requests",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"git-conventions",children:"Git Conventions"})}),"\n",(0,s.jsx)(n.p,{children:"Each change should be done in a Ticket (no matter how small)."}),"\n",(0,s.jsxs)(n.p,{children:["We use a ",(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow",children:"Feature Branch model"}),". Start a branch from main and make a PR to main."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Branch naming:"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"{{ PROJECT_ABBREVIATION }}-{{ NUMBER }}-word1-word2-word2"})}),"\n",(0,s.jsxs)(n.p,{children:["e.g.: ",(0,s.jsx)(n.code,{children:"BC-1234-course-copy"})]}),"\n",(0,s.jsx)(n.p,{children:"We try to keep branch names small. The Ticket Number should be in Uppercase (e.g BC-1234) but the namespace should be in lowercase. It should stay below 64 letters."}),"\n",(0,s.jsx)(n.h2,{id:"pull-requests",children:"Pull Requests"}),"\n",(0,s.jsx)(n.p,{children:"Pull Requests must contain a relevant description (template provides useful information, when creating the PR)."}),"\n",(0,s.jsx)(n.p,{children:"In case of UI changes also put a screenshot and talk to UX if thats fine like it is.\nAll Pull Requests Criterias (as defined in deployment pipeline) must be green before merge,\ne.g. 1 approving review, unit tests or QA checkbox in PR template."}),"\n",(0,s.jsx)(n.p,{children:"We merge by squash strategy. The squashed commit subject should start with a ticket number and end with a PR number. Write commit messages in imperative and active."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Text",children:"BC-1993 - lesson lernstore and geogebra copy (#3532)\n\nIn order to make sure developers in the future can find out why changes have been made,\nwe would like some descriptive text here that explains what we did and why.\n\n- change some important things\n- change some other things\n- refactor some existing things\n\n# We dont need to mention tests, changes that didnt make it to main, linter, or other fixups\n# only leave lines that are relevant changes compared to main\n# comments like this will not actually show up in the git history\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note for working with Windows:"})," We strongly recommend to let git translate line endings. Please set ",(0,s.jsx)(n.code,{children:"git config --global --add core.autocrlf"})," input when working with windows."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);