"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[9668],{4418:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"e2e-system-tests/ProjectStructure","title":"Project Structure","description":"Understanding the project directory layout will help you navigate and manage the Cypress-Cucumber E2E test framework effectively. This section provides a detailed breakdown of the folder structure and the purpose of each component.","source":"@site/docs/e2e-system-tests/1_ProjectStructure.md","sourceDirName":"e2e-system-tests","slug":"/e2e-system-tests/ProjectStructure","permalink":"/docs/e2e-system-tests/ProjectStructure","draft":false,"unlisted":false,"editUrl":"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/e2e-system-tests/1_ProjectStructure.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/e2e-system-tests/GettingStarted"},"next":{"title":"Code Conventions","permalink":"/docs/e2e-system-tests/CodeConventions"}}');var r=n(4848),o=n(8453);const i={sidebar_position:2},c="Project Structure",a={},d=[{value:"Project Directory Layout",id:"project-directory-layout",level:2},{value:"Explanation of Key Directories and Files",id:"explanation-of-key-directories-and-files",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"project-structure",children:"Project Structure"})}),"\n",(0,r.jsx)(t.p,{children:"Understanding the project directory layout will help you navigate and manage the Cypress-Cucumber E2E test framework effectively. This section provides a detailed breakdown of the folder structure and the purpose of each component."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"project-directory-layout",children:"Project Directory Layout"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"(root)\n|\n|---- .github/\n|     |____ automatic-trigger.yml          # GitHub Actions workflow for automatic triggers\n|     |____ manual-trigger.yml             # GitHub Actions workflow for manual runs\n|     |____ scheduled-trigger.yml          # GitHub Actions workflow for scheduled runs\n|     |____ main.yml                       # GitHub Actions workflow for reusable jobs\n|\n|---- .vscode/                             # Settings for recommended VS Code extensions\n|\n|---- env_variables/\n|     |____ template.env.json              # Template for credentials & environment variables (rename as `local.env.json`)\n|\n|---- cypress/\n|     |___ downloads/                      # Downloaded files during tests\n|     |___ fixtures/                       # Test data files\n|     |___ e2e/                            # Gherkin feature files\n|     |___ screenshots/                    # Screenshots taken on test failures\n|     |___ support/\n|         |___ custom_commands/            # Custom Cypress commands used in tests\n|         |___ pages/                      # Page Object methods for better test modularity\n|         |___ step_definitions/           # Step definitions for feature files\n|         |___ commands.js                 # Custom Cypress commands configuration\n|         |___ e2e.js                      # Global hooks and configurations\n|     |___ videos/                         # Recorded test run videos\n|\n|---- docs/\n|      |___ branch_activation.md\n|      |___ folder_structure.md\n|      |___ executing_tests.md\n|      |___ setup.md\n|      |___ tags.md\n|\n|---- env_variables/\n|      |___ devTemplate.env.json\n|      |___ stagingTemplate.env.json\n|\n|---- reports/                             # HTML reports and related assets\n|\n|---- logs/                                # Logs generated during test runs\n|\n|---- node_modules/                        # Project dependencies\n|\n|---- scripts/\n|     |____ aggregate-json-files.sh        # Script to aggregate JSON files in CI\n|     |____ runSchoolApi.js                # Script to interact with the School API\n|\n|---- .editorconfig                        # Editor configuration for consistent formatting\n|---- .gitattributes                       # Git attributes for line endings and diff\n|---- .prettierignore                      # Files and folders ignored by Prettier\n|---- .prettierrc                          # Prettier configuration for code formatting\n|---- .gitignore                           # Git ignore rules\n|---- reporter.js                          # Custom reporter for generating HTML reports\n|---- cypress.config.json                  # Cypress configuration settings\n|---- LICENSE                              # License file\n|---- package-lock.json                    # npm package lock file\n|---- package.json                         # Project dependencies and scripts\n|---- README.md                            # Project documentation and setup guide\n\n"})}),"\n",(0,r.jsx)(t.h3,{id:"explanation-of-key-directories-and-files",children:"Explanation of Key Directories and Files"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:".github/:"})," Contains CI/CD workflows for automated, manual, and scheduled test executions."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:".vscode/:"})," Recommended settings for VS Code extensions to maintain consistent coding standards."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"env_variables/:"})," Holds environment configuration files. Duplicate ",(0,r.jsx)(t.code,{children:"template.env.json"})," and rename it to ",(0,r.jsx)(t.code,{children:"local.env.json"})," for local testing."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"cypress/:"})," The main directory for Cypress tests."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"fixtures/:"})," Stores reusable test data."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"e2e/:"})," Contains all Gherkin .feature files."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"support/:"})," Includes custom commands, page objects, and step definitions."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"videos/ & screenshots/:"})," Captures test artifacts."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"docs/:"})," Additional documentation for tags, configurations, and best practices."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"reports/:"})," Contains HTML reports generated after test runs."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"scripts/:"})," Helpful scripts for CI/CD and API interactions."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:".prettierrc & .editorconfig:"})," Configuration files to enforce consistent coding styles."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"cypress.config.json:"})," Central configuration file for Cypress test settings."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"reporter.js:"})," Custom script to generate detailed HTML reports."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(6540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);