"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[4211],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),u=a,m=d["".concat(l,".").concat(u)]||d[u]||h[u]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={},i="Local Setup",p={unversionedId:"services/etherpad/Local setup",id:"services/etherpad/Local setup",title:"Local Setup",description:"Running the Etherpad server",source:"@site/docs/services/etherpad/Local setup.md",sourceDirName:"services/etherpad",slug:"/services/etherpad/Local setup",permalink:"/docs/services/etherpad/Local setup",draft:!1,editUrl:"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/services/etherpad/Local setup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How it works",permalink:"/docs/services/etherpad/How it works"},next:{title:"S3 commands",permalink:"/docs/services/files-storage/S3 commands"}},l={},s=[{value:"Running the Etherpad server",id:"running-the-etherpad-server",level:2}],c={toc:s},d="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"local-setup"},"Local Setup"),(0,a.kt)("h2",{id:"running-the-etherpad-server"},"Running the Etherpad server"),(0,a.kt)("p",null,"To run the Etherpad service for the local development and resting purposes you can follow the below steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a new dir that will contain all the needed files that we'll want to use when running the Etherpad service.\nCreate a directory called sc-etherpad\xa0and then enter it, in Unix-like systems you can use the following command: "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"`mkdir sc-etherpad && cd sc-etherpad`\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a new file called ",(0,a.kt)("inlineCode",{parentName:"p"},"APIKEY.txt")," in it, with the following content:"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"381d67e6347d235ac9446da3ea10a82efd6f8ae09fa2e90efeda80f82feeb4fd")),(0,a.kt)("p",{parentName:"li"},"We'll use this file to set a fixed Etherpad's API key on the Etherpad server's start.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create also a file called ",(0,a.kt)("inlineCode",{parentName:"p"},"settings.env")," with the following content:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'REQUIRE_SESSION="true"\nPAD_OPTIONS_SHOW_CHAT="true"\nDISABLE_IP_LOGGING="true"\nDEFAULT_PAD_TEXT="Schreib etwas!\\n\\nDieses Etherpad wird synchronisiert, w\xe4hrend du tippst, so dass alle Betrachter jederzeit den selben Text sehen. So k\xf6nnt ihr auf einfache Weise gemeinsam an Dokumenten arbeiten."\nDB_TYPE=mongodb\nDB_URL=mongodb://host.docker.internal:27017/etherpad\nAUTHENTICATION_METHOD=apikey\n')),(0,a.kt)("p",{parentName:"li"},"We'll use this file to provide all the needed environment variables to the Etherpad's server."),(0,a.kt)("p",{parentName:"li"},"Please note the line that contains the MongoDB connection string:"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"DB_URL=mongodb://host.docker.internal:27017/etherpad")),(0,a.kt)("p",{parentName:"li"},"Here we're using the ",(0,a.kt)("inlineCode",{parentName:"p"},"host.docker.internal")," hostname which should make it possible for the Etherpad's container to connect to the host's local network and should work out of the box e.g. on macOS. On WSL2 it might not work out of the box and need some extra work, see e.g. this ",(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/63898430/how-can-i-access-a-service-running-on-wsl2-from-inside-a-docker-container"},"stackoverflow thread"),"."),(0,a.kt)("p",{parentName:"li"},"An alternative configuaration would be to use ",(0,a.kt)("inlineCode",{parentName:"p"},"DB_URL=mongodb://localhost:27017/etherpad")," and then add ",(0,a.kt)("inlineCode",{parentName:"p"},'--network="host"')," to the following docker run command. ",(0,a.kt)("inlineCode",{parentName:"p"},'--network="host"')," removes the port mapping though. You can change the port Etherpad is listening on by adding ",(0,a.kt)("inlineCode",{parentName:"p"},"PORT=9002")," (or the port number you need) to settings.env.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Next, start the Etherpad's container:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker run -d \\\n    -p 9002:9001 \\\n    --env-file ./settings.env \\\n    -v ./APIKEY.txt:/opt/etherpad-lite/APIKEY.txt \\\n    --name sc-etherpad \\\n    docker.io/etherpad/etherpad:2.2.7\n")),(0,a.kt)("p",{parentName:"li"},"We're using the docker.io/etherpad/etherpad:2.2.7 image in the command above. To make sure you're using the version that is currently used in the SchulCloud platform, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hpi-schul-cloud/dof_app_deploy/blob/main/ansible/roles/dof_etherpad/defaults/main.yml"},"https://github.com/hpi-schul-cloud/dof_app_deploy/blob/main/ansible/roles/dof_etherpad/defaults/main.yml"),"."),(0,a.kt)("p",{parentName:"li"},"The bound port on the host (here 9002) is arbitrary, though port 9001 is used by MinIO in our default project setup and thus we use a different one here.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Now we should have the Etherpad service running locally on port 9002, we can verify it's working properly e.g. by    fetching the current Etherpad's API version:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'~ curl -v http://127.0.0.1:9002/api\n*   Trying 127.0.0.1:9002...\n* Connected to 127.0.0.1 (127.0.0.1) port 9002\n> GET /api HTTP/1.1\n> Host: 127.0.0.1:9002\n> User-Agent: curl/8.4.0\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< X-Powered-By: Express\n< X-UA-Compatible: IE=Edge,chrome=1\n< Referrer-Policy: same-origin\n< Content-Type: application/json; charset=utf-8\n< Content-Length: 26\n< ETag: W/"1a-2HmNLqF3wPt+KQRlEmGwH4O+xu4"\n< Date: Fri, 29 Mar 2024 13:27:00 GMT\n< Connection: keep-alive\n< Keep-Alive: timeout=5\n< \n* Connection #0 to host 127.0.0.1 left intact\n{"currentVersion":"1.3.0"}\n')),(0,a.kt)("p",{parentName:"li"},"We can also verify that the API key has been set successfully, let's use the example API call from the Etherpad's documentation ( ",(0,a.kt)("a",{parentName:"p",href:"https://etherpad.org/doc/v2.2.7/#_example_1"},"https://etherpad.org/doc/v2.2.7/#_example_1")," ):"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'~ curl -v http://127.0.0.1:9002/api/1/createAuthorIfNotExistsFor\\?apikey\\=381d67e6347d235ac9446da3ea10a82efd6f8ae09fa2e90efeda80f82feeb4fd\\&name\\=Michael\\&authorMapper\\=7\n*   Trying 127.0.0.1:9002...\n* Connected to 127.0.0.1 (127.0.0.1) port 9002\n> GET /api/1/createAuthorIfNotExistsFor?apikey=381d67e6347d235ac9446da3ea10a82efd6f8ae09fa2e90efeda80f82feeb4fd&name=Michael&authorMapper=7 HTTP/1.1\n> Host: 127.0.0.1:9002\n> User-Agent: curl/8.4.0\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< X-Powered-By: Express\n< X-UA-Compatible: IE=Edge,chrome=1\n< Referrer-Policy: same-origin\n< Content-Type: application/json; charset=utf-8\n< Content-Length: 66\n< ETag: W/"42-bg92QA1xRFO6QmkNRbNXhfsFBUM"\n< Date: Fri, 29 Mar 2024 13:40:05 GMT\n< Connection: keep-alive\n< Keep-Alive: timeout=5\n< \n* Connection #0 to host 127.0.0.1 left intact\n{"code":0,"message":"ok","data":{"authorID":"a.7BgkAuzbHXR1G8Cv"}}\n')),(0,a.kt)("p",{parentName:"li"},"In case of an unsuccessful result (e.g. improperly set or invalid API key) we would receive the following response:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'~ curl -v http://127.0.0.1:9002/api/1/createAuthorIfNotExistsFor\\?apikey\\=secret\\&name\\=Michael\\&authorMapper\\=7\n*   Trying 127.0.0.1:9002...\n* Connected to 127.0.0.1 (127.0.0.1) port 9002\n> GET /api/1/createAuthorIfNotExistsFor?apikey=secret&name=Michael&authorMapper=7 HTTP/1.1\n> Host: 127.0.0.1:9002\n> User-Agent: curl/8.4.0\n> Accept: */*\n> \n< HTTP/1.1 401 Unauthorized\n< X-Powered-By: Express\n< X-UA-Compatible: IE=Edge,chrome=1\n< Referrer-Policy: same-origin\n< Content-Type: application/json; charset=utf-8\n< Content-Length: 54\n< ETag: W/"36-dbJd0O+vdNi3zPpwRXE+1EGLTho"\n< Date: Fri, 29 Mar 2024 13:39:44 GMT\n< Connection: keep-alive\n< Keep-Alive: timeout=5\n< \n* Connection #0 to host 127.0.0.1 left intact\n{"code":4,"message":"no or wrong API Key","data":null}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set the following config values in the server:\n| Key | Value |\n| --- | --- |\n| ETHERPAD",(0,a.kt)("strong",{parentName:"p"},"API_KEY | 381d67e6347d235ac9446da3ea10a82efd6f8ae09fa2e90efeda80f82feeb4fd |\n| ETHERPAD"),"URI | http://localhost:9002/api/1 |\n| ETHERPAD__PAD_URI | http://localhost:9002/p |"),(0,a.kt)("p",{parentName:"li"}," Set the following config values in the client:\n| Key | Value |\n| --- | --- |\n| ETHERPAD",(0,a.kt)("strong",{parentName:"p"},"PAD_URI | http://localhost:9002/p |\n| ETHERPAD"),"PAD_PATH | /p |\n| ETHERPAD__NEW_DOMAIN | localhost |"),(0,a.kt)("p",{parentName:"li"},"For the other config values the defaults in ",(0,a.kt)("inlineCode",{parentName:"p"},"default.schema.json")," should work.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Now you should be able to create and use Etherpads in boards and topics."))))}h.isMDXComponent=!0}}]);