"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[1646],{5385:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"services/tldraw-server/Local setup","title":"Local setup","description":"To run tldraw locally:","source":"@site/docs/services/tldraw-server/Local setup.md","sourceDirName":"services/tldraw-server","slug":"/services/tldraw-server/Local setup","permalink":"/docs/services/tldraw-server/Local setup","draft":false,"unlisted":false,"editUrl":"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/services/tldraw-server/Local setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"How it works","permalink":"/docs/services/tldraw-server/How it works"},"next":{"title":"Technical details","permalink":"/docs/services/tldraw-server/Technical details"}}');var s=t(4848),l=t(8453);const i={},o="Local setup",a={},c=[{value:"To run tldraw locally:",id:"to-run-tldraw-locally",level:3},{value:"Create new whiteboard:",id:"create-new-whiteboard",level:3}];function d(e){const r={a:"a",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"local-setup",children:"Local setup"})}),"\n",(0,s.jsx)(r.h3,{id:"to-run-tldraw-locally",children:"To run tldraw locally:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["Run redis i.e. in a docker container, it will work on localhost:6379 by default which is what the REDIS_URI env var is set to, for example on wsl: ",(0,s.jsx)(r.a,{href:"https://redis.io/docs/latest/operate/oss_and_stack/install/install-redis/install-redis-on-windows/",children:"https://redis.io/docs/latest/operate/oss_and_stack/install/install-redis/install-redis-on-windows/"})," ."]}),"\n",(0,s.jsx)(r.li,{children:"In the tldraw-server make a copy of .env.default and rename it to .env, in order to use the default configuration."}),"\n",(0,s.jsxs)(r.li,{children:["To run","\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["npm run nest:start",":dev"," (schulcloud-server)"]}),"\n",(0,s.jsxs)(r.li,{children:["npm run nest:start:files-storage",":dev"," (schulcloud-server with s3, if you want to upload files)"]}),"\n",(0,s.jsxs)(r.li,{children:["npm run start:server",":dev"," (tldraw-server)"]}),"\n",(0,s.jsxs)(r.li,{children:["npm run start:worker",":dev"," (tldraw-server)"]}),"\n",(0,s.jsx)(r.li,{children:"npm run dev (schulcloud-client)"}),"\n",(0,s.jsx)(r.li,{children:"npm run servce (nuxt-client)"}),"\n",(0,s.jsx)(r.li,{children:"npm run dev (tldraw-client)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"create-new-whiteboard",children:"Create new whiteboard:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Go to a course."}),"\n",(0,s.jsx)(r.li,{children:"Go to 'Column board'."}),"\n",(0,s.jsx)(r.li,{children:"Create a new card and a new 'Whiteboard' element within it, then click it."}),"\n",(0,s.jsxs)(r.li,{children:["A new browser tab with URL like: ",(0,s.jsx)(r.a,{href:"http://localhost:4000/tldraw?roomName=65c37329b2f97cc714d31c00",children:"http://localhost:4000/tldraw?roomName=65c37329b2f97cc714d31c00"})," will open."]}),"\n",(0,s.jsx)(r.li,{children:"Change the port part from 4000 to 3046, which is the default port of tldraw-client app."}),"\n",(0,s.jsx)(r.li,{children:"You should see a working tldraw whiteboard now."}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var n=t(6540);const s={},l=n.createContext(s);function i(e){const r=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(l.Provider,{value:r},e.children)}}}]);