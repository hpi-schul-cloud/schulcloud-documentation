"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[1857],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,m=u["".concat(l,".").concat(d)]||u[d]||h[d]||a;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8925:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},s="How it works",i={unversionedId:"services/tsp-sync/How it works",id:"services/tsp-sync/How it works",title:"How it works",description:"Configuration",source:"@site/docs/services/tsp-sync/How it works.md",sourceDirName:"services/tsp-sync",slug:"/services/tsp-sync/How it works",permalink:"/docs/services/tsp-sync/How it works",draft:!1,editUrl:"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/services/tsp-sync/How it works.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/docs/services/tsp-sync/Architecture"},next:{title:"How to update the docs",permalink:"/docs/category/how-to-update-the-docs"}},l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Sync console",id:"sync-console",level:2},{value:"Usage",id:"usage",level:3},{value:"TSP synchronization",id:"tsp-synchronization",level:3}],p={toc:c},u="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-it-works"},"How it works"),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"FEATURE_TSP_SYNC_ENABLED - Activates the sync strategy inside the sync console")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"WITH_TSP_SYNC - Activates the cronjob in Kubernetes")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"TSP_API_CLIENT_BASE_URL - Base URL for the TSP API")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"TSP_API_TOKEN_LIFETIME_MS - Lifetime of the access token for the TSP API in milliseconds")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"TSP_SYNC_SCHOOL_LIMIT - The amount of schools the sync handles at once")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"TSP_SYNC_SCHOOL_DAYS_TO_FETCH - The amount of days for which the sync fetches schools from the TSP API")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"TSP_SYNC_DATA_LIMIT - The amount of school data updates the sync handles at once")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"TSP_SYNC_DATA_DAYS_TO_FETCH - The amount of days for which the sync fetches school data from the TSP API"))),(0,o.kt)("h2",{id:"sync-console"},"Sync console"),(0,o.kt)("p",null,"This is a console application that allows you to start the synchronization process for different sources."),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"To start the synchronization process, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run nest:start:console sync run <target>\n")),(0,o.kt)("p",null,"Where ",(0,o.kt)("inlineCode",{parentName:"p"},"<target>")," is the name of the system you want to start the synchronization for. The currently available systems are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tsp")," - Synchronize Th\xfcringer Schulportal.")),(0,o.kt)("p",null,"If the target is not provided, the synchronization will not start and the available targets will be displayed in an error message."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"{\n    message: 'Either synchronization is not activated or the target entered is invalid',\n    data: { enteredTarget: 'tsp', availableTargets: { TSP: 'tsp' }}\n}\n")),(0,o.kt)("h3",{id:"tsp-synchronization"},"TSP synchronization"),(0,o.kt)("p",null,"The TSP synchronization is controlled with the feature flag  ",(0,o.kt)("inlineCode",{parentName:"p"},"FEATURE_TSP_SYNC_ENABLED"),"."))}h.isMDXComponent=!0}}]);