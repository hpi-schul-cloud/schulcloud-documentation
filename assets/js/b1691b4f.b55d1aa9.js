"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[7068],{4640:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"services/files-storage/How it works","title":"Module Description - files-storage","description":"Summary","source":"@site/docs/services/files-storage/How it works.md","sourceDirName":"services/files-storage","slug":"/services/files-storage/How it works","permalink":"/docs/services/files-storage/How it works","draft":false,"unlisted":false,"editUrl":"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/services/files-storage/How it works.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Files Storage","permalink":"/docs/category/files-storage"},"next":{"title":"S3 commands","permalink":"/docs/services/files-storage/S3 commands"}}');var o=t(4848),i=t(8453);const r={},a="Module Description - files-storage",l={},d=[{value:"Summary",id:"summary",level:2},{value:"Goals and Ideas",id:"goals-and-ideas",level:2},{value:"Stand Alone Service",id:"stand-alone-service",level:3},{value:"Parent Logic",id:"parent-logic",level:3},{value:"S3 Structure",id:"s3-structure",level:3},{value:"Deleting Files",id:"deleting-files",level:3},{value:"Internal and External App and Service Interface",id:"internal-and-external-app-and-service-interface",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Grafana",id:"grafana",level:3},{value:"DB",id:"db",level:3},{value:"Storage",id:"storage",level:3},{value:"Authorization Module",id:"authorization-module",level:3},{value:"Authentication Interceptors",id:"authentication-interceptors",level:3},{value:"ToDos",id:"todos",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"module-description---files-storage",children:"Module Description - files-storage"})}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(n.p,{children:"This module is a stand alone files service.\nThe service handles the binary files and the files meta data.\nIt provides upload and download streams."}),"\n",(0,o.jsx)(n.p,{children:"The Service is used for deeper and individual authorisation contexts for files."}),"\n",(0,o.jsx)(n.p,{children:"The module follows the generell structure:\nS3 > Client > Service\nDB > ORM > DataRecord > Repo > Domain Object > Service > ..\n..Service > Uc > API Controller (external communication)\n..Service > RMQP Consumer Controller (internal communication)"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Please note that Uc (Usecase) holds the authorisation and the consumer uses the service directly.\n(Avoid internal double authorisation)"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"goals-and-ideas",children:"Goals and Ideas"}),"\n",(0,o.jsx)(n.h3,{id:"stand-alone-service",children:"Stand Alone Service"}),"\n",(0,o.jsx)(n.p,{children:"Should work as stand alone service.\nIt does not know anything about the use cases it is used for.\nIt exists no real DB reference on any other place. No types, or interfaces are exposed.\nWe avoid dependency to other modules, except the ones in dependecies. (see: ## Dependencies)"}),"\n",(0,o.jsx)(n.h3,{id:"parent-logic",children:"Parent Logic"}),"\n",(0,o.jsx)(n.p,{children:"Any file must be placed in a scope. It is called parent (type).\nMultiple files can be added to one parent.\nThe parent is used for the authorisation.\nThe authorisation service must match and handle this types."}),"\n",(0,o.jsx)(n.h3,{id:"s3-structure",children:"S3 Structure"}),"\n",(0,o.jsx)(n.p,{children:"The service is connected to exactly one S3 storage bucket.\nInside the bucket it can be defined store locations to collect or aggregate informations.\nCurrently the instance it self and each school has store locations.\nThey are referenced over IDs as string, to keep the service stand alone.\nThis allows us to get total size of files and needed space for one school.\nAny school folder is created on demand."}),"\n",(0,o.jsx)(n.p,{children:"Any file must be located in a school folder and referenced to a parent. (see: ### Parent Logic)"}),"\n",(0,o.jsx)(n.h3,{id:"deleting-files",children:"Deleting Files"}),"\n",(0,o.jsx)(n.p,{children:"Currently a file is marked for deletion and finally removed after 7 days.\nIn s3 the marked file is moved to a ./trash folder.\nThe trash folder contains also sub folders for the schools."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"./trash/schoolId/fileRecordId"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"internal-and-external-app-and-service-interface",children:"Internal and External App and Service Interface"}),"\n",(0,o.jsx)(n.p,{children:"For internal communication we use a queue based solution instead of http.\nThe pods with queue (amqp.module) and with https controller (api.module) can be started seperatly."}),"\n",(0,o.jsx)(n.p,{children:"For queue based solution we use rabbitMQ AMQP."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://www.rabbitmq.com/tutorials/amqp-concepts.html",children:"https://www.rabbitmq.com/tutorials/amqp-concepts.html"}),"\nWe only have a consumer in controller, but no producer.\nThe files service uses the rabbitMQ modul and solves the mapping to the exchange types."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The api controller is documented over swagger and must support open api.\nIt is used for the openAPI generation in client."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"If you want to communicate with the files services from core backend, please use the files-storage-client module."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,o.jsx)(n.h3,{id:"grafana",children:"Grafana"}),"\n",(0,o.jsx)(n.p,{children:"This is not a direct dependency.\nBut we use grafana to create metrics about the service and our storage.\nThe storage structure supports the metrics creation at school and instance level."}),"\n",(0,o.jsx)(n.h3,{id:"db",children:"DB"}),"\n",(0,o.jsx)(n.p,{children:"We use a mongoDB with a ORM (mikroORM) to store the files meta data and the contexts.\nIt uses only one data table / collection that is called filerecords."}),"\n",(0,o.jsx)(n.h3,{id:"storage",children:"Storage"}),"\n",(0,o.jsx)(n.p,{children:"As storage we use a generell S3 with a the standard package for the client.\nThe package for the S3 client is wrapped in an own client interface that can be used for the communication."}),"\n",(0,o.jsx)(n.p,{children:"folder structure in S3"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"schoolId/fileRecordId\n.trash/schoolId/fileRecordId (see: ## Goals and Ideas > ### Deleting Files)"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"authorization-module",children:"Authorization Module"}),"\n",(0,o.jsx)(n.p,{children:"The authorisation is solved by parents.\nTherefore it is required that the parent types must be known to the authentication service.\nOnly the reference authorisation works."}),"\n",(0,o.jsx)(n.p,{children:"It is possible to write an own authorisation modul and inject it, if you need it in future."}),"\n",(0,o.jsx)(n.h3,{id:"authentication-interceptors",children:"Authentication Interceptors"}),"\n",(0,o.jsx)(n.p,{children:"To avoid duplicated code the intercetors and logic for logging, authorisation from core folder is used.\nThis adds a transitive dependecy to the authentication module."}),"\n",(0,o.jsx)(n.h2,{id:"todos",children:"ToDos"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Connecting with the deletion concept, include also the delete of a complete school folder. (not implemented for now)"}),"\n",(0,o.jsx)(n.li,{children:'An admin interface that supports "system user" and "support tools" not existing for now.'}),"\n",(0,o.jsx)(n.li,{children:"Domain Object and layer is not introduced"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);